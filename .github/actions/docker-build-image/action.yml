name: "Build docker image if tag is not 'latest'"

description: "Build docker image if tag is not 'latest'"

inputs:
  docker-registry:
    description: "Docker registry"
    required: true
  docker-login:
    description: "Docker login"
    required: true
  docker-password:
    description: "Docker password"
    required: true
  dockercontext:
    description: "Docker build context"
    required: false
    default: "."
  dockerfile:
    description: "Dockerfile"
    required: false
    default: "Dockerfile"
  image-name:
    description: "Docker image name"
    required: false
    default: "${{ github.event.repository.name }}"
  image-tag:
    description: "Docker image tag"
    required: false
    default: "latest"
  build-args:
    description: "Docker build argunebts"
    required: false
    default: ""

outputs:
  docker-image:
    description: "Docker image"
    value: ${{ steps.image.outputs.value }}

runs:
  using: "composite"
  steps:
    - name: "Set docker image tag"
      id: image
      shell: bash
      run: echo "value=${{ inputs.docker-registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT

    - name: "Set DOCKER_CONFIG because buildx stores data there"
      if: inputs.image-tag != 'latest'
      shell: bash
      run: echo "DOCKER_CONFIG=./.docker" >> $GITHUB_ENV

    - name: "Set up Docker Buildx"
      if: inputs.image-tag != 'latest'
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
        driver: docker

    - name: "Login to docker registry"
      if: inputs.image-tag != 'latest'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ inputs.docker-login }}
        password: ${{ inputs.docker-password }}

    - name: "Build and push"
      if: inputs.image-tag != 'latest'
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.dockercontext }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.image.outputs.value }}
        build-args: ${{ inputs.build-args }}
        push: true
